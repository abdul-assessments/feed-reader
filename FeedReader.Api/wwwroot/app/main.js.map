{"version":3,"sources":["./src/app/components/feed-item/feed-item.component.ts","./src/app/components/feed-item/feed-item.component.html","./src/app/components/feed-list/feed-list.component.ts","./src/app/components/feed-list/feed-list.component.html","./src/environments/environment.ts","./src/app/services/feed.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FeedData } from '../../interfaces/feed-data';\r\n\n@Component({\n  selector: 'app-feed-item',\n  templateUrl: './feed-item.component.html',\n  styleUrls: ['./feed-item.component.css']\n})\nexport class FeedItemComponent implements OnInit {\n  @Input()\n  feedItem!: FeedData;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article *ngIf=\"feedItem.title\">\n  <a href=\"{{feedItem.url}}\" target=\"_blank\" title=\"External link. Link will open in new tab\">\n    <h3>\n      {{feedItem.title}}\n    </h3>\n  </a>\n  <p>\n    {{feedItem.summary}}\n  </p>\n  <div class=\"flexbox\">\n    <div class=\"flexitem-tab\">\n\n    </div>\n  </div>\n  <div class=\"feed-date\">\n    Published Date: {{feedItem.publishDate}}\n  </div>\n</article>\n<hr/>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeedResponse } from '../../interfaces/feed-response';\r\nimport { FeedService } from '../../services/feed.service';\r\n\n@Component({\n  selector: 'app-feed-list',\n  templateUrl: './feed-list.component.html',\n  styleUrls: ['./feed-list.component.css']\n})\nexport class FeedListComponent implements OnInit {\n  feed: FeedResponse;\n  header: string;\n  isArchive: boolean;\n\n  constructor(public feedService: FeedService)\n  {\n    this.header = '';\n    this.feed = { isLatest: true, feed: []} as FeedResponse;\n  }\n\n  ngOnInit(): void {\n    this.getFeed('d', 'd');\n  }\n  getFeed(sort: string, order: string): void {\n    this.feedService.getLatestFeed(sort, order)\n      .subscribe(feedResponse => this.updateLatestFeed(feedResponse));\n  }\n\n  sortFeed(page: number, posts: number, sort: string, order: string): void {\n    if (this.isArchive) {\n      this.feedService.getArchive(page, posts, sort, order)\n        .subscribe(feedResponse => this.updateArchiveFeed(feedResponse));\r\n    }\n    else {\n      this.feedService.getLatestFeed(sort, order)\n        .subscribe(feedResponse => this.updateLatestFeed(feedResponse));\r\n    }\n  }\n\n  private updateLatestFeed(feedResponse: FeedResponse): void {\n    this.feed.feed = feedResponse.feed;\r\n    this.feed.isLatest = feedResponse.isLatest;\r\n    this.feedService.loading = false;\r\n\r\n    if (feedResponse.isLatest) {\r\n      this.header = 'You are viewing the latest posts from BBC Rss feed';\r\n    }\r\n    else {\r\n      this.header = 'BBC Rss feed unreachable, you are viewing archived posts';\r\n    }\r\n  }\n\n  private updateArchiveFeed(feedResponse: FeedResponse): void {\n    this.feed.feed = feedResponse.feed;\r\n    this.feed.isLatest = feedResponse.isLatest;\r\n    this.feedService.loading = false;\r\n    this.header = 'You are viewing archived posts';\r\n  }\n}\n","<section>\r\n  <mat-checkbox [(ngModel)]=\"isArchive\">Include Archives</mat-checkbox>\r\n  <button class=\"flexitem\" (click)=\"sortFeed(page.value, posts.value, sort.value, order.value)\">\r\n    Refresh List\r\n  </button>\r\n</section>\r\n<section class=\"flex-container\">\r\n  <section class=\"flexbox\">    \r\n    <div class=\"flexitem\">\r\n      <label>Sort by:&nbsp;</label>\r\n      <select #sort>\r\n        <option value=\"t\">\r\n          Title\r\n        </option>\r\n        <option value=\"d\" selected>\r\n          Date\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"flexitem\">\r\n      <label>Order:&nbsp;</label>\r\n      <select #order>\r\n        <option value=\"a\">\r\n          Ascending\r\n        </option>\r\n        <option value=\"d\" selected>\r\n          Descending\r\n        </option>\r\n      </select>\r\n    </div>   \r\n  </section>\r\n  <section style=\"text-align:right\" class=\"flexbox\" [attr.style]=\"!feed.isLatest ? null : 'display:none'\">\r\n    <div class=\"flexitem\">\r\n      <label>Posts</label>\r\n      <select #posts>\r\n        <option value=\"20\" selected>\r\n          20\r\n        </option>\r\n        <option value=\"50\">\r\n          50\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"flexitem\">\r\n      <label>Page</label>\r\n      <input type=\"number\" min=\"0\" value=\"1\" #page style=\"max-width:50px\"/>\r\n    </div>\r\n  </section>\r\n</section>\r\n\r\n<section *ngIf=\"!feedService.loading; else loading\" style=\"width:auto;\">\r\n  <h3>{{header}}</h3>\r\n  <hr/>\r\n  <app-feed-item *ngFor=\"let feed of feed.feed\" [feedItem]=\"feed\"></app-feed-item>\r\n</section>\r\n<ng-template #loading>\r\n  <section>\r\n    <img src=\"/loading.gif\" />\r\n  </section>\r\n</ng-template>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\r\nimport { FeedResponse } from '../interfaces/feed-response';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n  private feedApiUrl = '/api/feed';\n  loading: boolean;\n  feedResponse: FeedResponse;\n\n  constructor(private http: HttpClient)\n  {\n    this.loading = true;\n    this.feedResponse = { } as FeedResponse;\n  }\n\n  //Get\n  getLatestFeed(sort: string, order: string): Observable<FeedResponse> {\n    this.loading = true;\n    return this.http.get<FeedResponse>(`${this.feedApiUrl}/latest?sort=${sort}&order=${order}`)\n      .pipe(\n        catchError(this.handleError<FeedResponse>('getLatest', {} as FeedResponse))\n      );\n  }\n  getArchive(page: number, posts: number, sort: string, order: string): Observable<FeedResponse> {\n    this.loading = true;\n    return this.http.get<FeedResponse>(`${this.feedApiUrl}/archive?page=${page}&posts=${posts}&sort=${sort}&order=${order}`)\n      .pipe(\n        catchError(this.handleError<FeedResponse>('getArchive', {} as FeedResponse))\n      );\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'feed-reader-app';\n}\n","<h2>\n  Welcome to the BBC news feed archives\n</h2>\n<app-feed-list></app-feed-list>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { AppComponent } from './app.component';\nimport { FeedItemComponent } from './components/feed-item/feed-item.component';\nimport { FeedListComponent } from './components/feed-list/feed-list.component';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FeedItemComponent,\n    FeedListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatCheckboxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}